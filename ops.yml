version: "1"
pipelines:
  - name: sample-expressjs-pipeline-aws-eks-ec2-asg-cdk:0.1.3
    description: build a release for deployment
    env:
      static:
        - DEBIAN_FRONTEND=noninteractive
        - ORG=workflows-sh
        - REPO=sample-expressjs-aws-eks-ec2-asg-cdk
        - AWS_REGION=us-west-1
        - STACK_TYPE=aws-eks-ec2-asg-cdk
      secrets:
        - GITHUB_TOKEN
        - AWS_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY
        - AWS_ACCOUNT_NUMBER
    events:
      - "github:workflows-sh/sample-expressjs-aws-eks-ec2-asg-cdk:pull_request.merged"
      - "github:workflows-sh/sample-expressjs-aws-eks-ec2-asg-cdk:pull_request.opened"
      - "github:workflows-sh/sample-expressjs-aws-eks-ec2-asg-cdk:pull_request.synchronize"
    jobs:
      - name: sample-expressjs-build-job-aws-eks-ec2-asg-cdk
        description: sample-expressjs build step
        packages:
          - git
          - unzip
          - python
        steps:
          - curl https://s3.amazonaws.com/aws-cli/awscli-bundle-1.18.200.zip -o awscli-bundle.zip
          - unzip awscli-bundle.zip && ./awscli-bundle/install -b ~/bin/aws
          - export PATH=~/bin:$PATH
          - aws --version
          - git clone https://oauth2:$GITHUB_TOKEN@github.com/$ORG/$REPO
          - cd $REPO && ls -asl
          - git fetch && git checkout $REF
          - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_NUMBER.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO
          - docker build -f Dockerfile -t $AWS_ACCOUNT_NUMBER.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO-$STACK_TYPE:$REF .
          - docker push $AWS_ACCOUNT_NUMBER.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO-$STACK_TYPE:$REF
  - name: sample-expressjs-test-aws-eks-ec2-asg-cdk:0.1.4
    description: run tests
    env:
      static:
        - DEBIAN_FRONTEND=noninteractive
        - ORG=workflows-sh
        - REPO=sample-expressjs-aws-eks-ec2-asg-cdk
      secrets:
        - GITHUB_TOKEN
    events:
      - "github:workflows-sh/sample-expressjs-aws-eks-ec2-asg-cdk:pull_request.merged"
      - "github:workflows-sh/sample-expressjs-aws-eks-ec2-asg-cdk:pull_request.opened"
      - "github:workflows-sh/sample-expressjs-aws-eks-ec2-asg-cdk:pull_request.synchronize"
    jobs:
      - name: sample-expressjs-test-job-aws-eks-ec2-asg-cdk
        description: sample-expressjs test step
        packages:
          - git
          - npm
        steps:
          - git clone https://oauth2:$GITHUB_TOKEN@github.com/$ORG/$REPO
          - cd $REPO && ls -asl
          - git fetch && git checkout $REF
          - npm i
          - npm run test
services:
  - name: sample-expressjs-service-aws-eks-ec2-asg-cdk:0.1.5
    description: A sample expressjs service
    run: node /ops/index.js
    port: [ '8080:8080' ]
    sdk: off
    domain: ""
    env:
      static:
        - PORT=8080
    events:
      - "github:workflows-sh/sample-expressjs-aws-eks-ec2-asg-cdk:pull_request.merged"
      - "github:workflows-sh/sample-expressjs-aws-eks-ec2-asg-cdk:pull_request.opened"
      - "github:workflows-sh/sample-expressjs-aws-eks-ec2-asg-cdk:pull_request.synchronize"
    trigger:
     - build
     - publish
     - start
